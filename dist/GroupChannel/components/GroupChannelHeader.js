import { _ as __assign } from '../../chunks/bundle-HcNswZ5p.js';
import React__default from 'react';
import { G as GroupChannelHeaderView } from '../../chunks/bundle-CuN4sGRL.js';
import { useGroupChannelContext } from '../context.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-0WaCg6X7.js';
import '../../ui/ChannelAvatar.js';
import '../../chunks/bundle-2pbuHA3C.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-DkDQ1PWY.js';
import '../../chunks/bundle-AE2zORxE.js';
import '../../chunks/bundle-BL4_FV0d.js';
import '../../chunks/bundle-Qkp2VIaZ.js';
import '../../chunks/bundle-dybWaw0v.js';
import '../../chunks/bundle-Bd-i99nk.js';
import '@sendbird/chat/groupChannel';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-DjLJFwD7.js';
import '../../chunks/bundle-DB7YSrIT.js';
import '../../chunks/bundle-DQk0aENq.js';
import '../../chunks/bundle-DnSobLtx.js';
import '../../useSendbirdStateContext.js';
import '../../withSendbird.js';
import '../../chunks/bundle-DhMUg-L7.js';
import '../../ui/Header.js';
import '../../ui/TextButton.js';
import '../../chunks/bundle-DGMsaaNU.js';
import '../../ui/IconButton.js';
import '@sendbird/chat/message';
import '@sendbird/uikit-tools';
import '../../chunks/bundle-B91Bhfde.js';
import '../../chunks/bundle-ja8H3E0K.js';
import 'react-dom';
import '../../ui/Button.js';
import 'css-vars-ponyfill';
import '@sendbird/chat';
import '../../chunks/bundle-C5iY_IvV.js';
import '@sendbird/chat/openChannel';
import '../../chunks/bundle-zy1mnw8U.js';
import '../../chunks/bundle-BKzcG-aC.js';
import '../../ui/SortByRow.js';
import '../../chunks/bundle-CZtAsa-i.js';
import '../../chunks/bundle-CUhgRMBc.js';
import '../../chunks/bundle-BB4cJn39.js';
import '../../chunks/bundle-CijxkMjj.js';
import '../../chunks/bundle-CT4PvZdn.js';
import '../../chunks/bundle-BwmZGijR.js';
import '../../chunks/bundle-CuavrWk1.js';

var GroupChannelHeader = function (props) {
    var context = useGroupChannelContext();
    return (React__default.createElement(GroupChannelHeaderView, __assign({}, props, context, { currentChannel: context.currentChannel })));
};

export { GroupChannelHeader, GroupChannelHeader as default };
//# sourceMappingURL=GroupChannelHeader.js.map
